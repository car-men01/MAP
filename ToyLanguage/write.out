ExeStack:
int v
v = 4
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
v = 4
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; int v ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
v = 4
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; int v ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
v = 4
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



ExeStack:
v = 4
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



ExeStack:
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; v = 4 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



ExeStack:
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; v = 4 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



ExeStack:
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
while (v > 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 4

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 4

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 3

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 3

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 2

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 2

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 1

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 1

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v > 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:


SymTable:
v -> 0

Out:
4 3 2 1 0 

FileTable:

Heap:



ExeStack:


SymTable:
v -> 0

Out:
4 3 2 1 0 

FileTable:

Heap:



ExeStack:
int v
v = 4
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
v = 4
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; int v ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
v = 4
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; int v ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
v = 4
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



ExeStack:
v = 4
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



ExeStack:
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; v = 4 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



ExeStack:
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; v = 4 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



ExeStack:
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
while (v >= 0) {
print(v)
v = v - 1
}
print(v) ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 4

Out:


FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 4

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 4

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 3

Out:
4 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 3

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 3

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 2

Out:
4 3 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 2

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 2

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 1

Out:
4 3 2 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 1

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 1

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; print(v)
v = v - 1 ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; print(v) ; 

SymTable:
v -> 0

Out:
4 3 2 1 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 0

Out:
4 3 2 1 0 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; v = v - 1 ; 

SymTable:
v -> 0

Out:
4 3 2 1 0 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> -1

Out:
4 3 2 1 0 

FileTable:

Heap:



ExeStack:
print(v) ; while (v >= 0) {
print(v)
v = v - 1
} ; 

SymTable:
v -> -1

Out:
4 3 2 1 0 

FileTable:

Heap:



ExeStack:
print(v) ; 

SymTable:
v -> -1

Out:
4 3 2 1 0 

FileTable:

Heap:



ExeStack:
print(v) ; 

SymTable:
v -> -1

Out:
4 3 2 1 0 

FileTable:

Heap:



ExeStack:


SymTable:
v -> -1

Out:
4 3 2 1 0 -1 

FileTable:

Heap:



ExeStack:


SymTable:
v -> -1

Out:
4 3 2 1 0 -1 

FileTable:

Heap:



ExeStack:
Ref(int) v
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; Ref(int) v ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; Ref(int) v ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (0, int)

Out:


FileTable:

Heap:



ExeStack:
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (0, int)

Out:


FileTable:

Heap:



ExeStack:
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; new(v, 20) ; 

SymTable:
v -> (0, int)

Out:


FileTable:

Heap:



ExeStack:
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; new(v, 20) ; 

SymTable:
v -> (0, int)

Out:


FileTable:

Heap:



ExeStack:
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



ExeStack:
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



ExeStack:
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; Ref(Ref(int)) a ; 

SymTable:
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



ExeStack:
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; Ref(Ref(int)) a ; 

SymTable:
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



ExeStack:
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (0, Ref(int))
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



ExeStack:
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (0, Ref(int))
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



ExeStack:
new(v, 30)
print(readHeap(readHeap(a))) ; new(a, v) ; 

SymTable:
a -> (0, Ref(int))
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



ExeStack:
new(v, 30)
print(readHeap(readHeap(a))) ; new(a, v) ; 

SymTable:
a -> (0, Ref(int))
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



ExeStack:
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (2, Ref(int))
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> (1, int)



ExeStack:
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (2, Ref(int))
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> (1, int)



ExeStack:
print(readHeap(readHeap(a))) ; new(v, 30) ; 

SymTable:
a -> (2, Ref(int))
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> (1, int)



ExeStack:
print(readHeap(readHeap(a))) ; new(v, 30) ; 

SymTable:
a -> (2, Ref(int))
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> (1, int)



ExeStack:
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (2, Ref(int))
v -> (3, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30



ExeStack:
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (2, Ref(int))
v -> (3, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30



ExeStack:


SymTable:
a -> (2, Ref(int))
v -> (3, int)

Out:
20 

FileTable:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30



ExeStack:


SymTable:
a -> (2, Ref(int))
v -> (3, int)

Out:
20 

FileTable:

Heap:
1 -> 20
2 -> (1, int)
3 -> 30



ExeStack:
Ref(int) v
new(v, 10)
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
new(v, 10)
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; Ref(int) v ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
new(v, 10)
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; Ref(int) v ; 

SymTable:

Out:


FileTable:

Heap:



ExeStack:
new(v, 10)
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (0, int)

Out:


FileTable:

Heap:



ExeStack:
new(v, 10)
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (0, int)

Out:


FileTable:

Heap:



ExeStack:
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; new(v, 10) ; 

SymTable:
v -> (0, int)

Out:


FileTable:

Heap:



ExeStack:
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; new(v, 10) ; 

SymTable:
v -> (0, int)

Out:


FileTable:

Heap:



ExeStack:
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 10



ExeStack:
new(v, 20)
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 10



ExeStack:
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; new(v, 20) ; 

SymTable:
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 10



ExeStack:
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; new(v, 20) ; 

SymTable:
v -> (1, int)

Out:


FileTable:

Heap:
1 -> 10



ExeStack:
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (2, int)

Out:


FileTable:

Heap:
1 -> 10
2 -> 20



ExeStack:
Ref(Ref(int)) a
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20



ExeStack:
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; Ref(Ref(int)) a ; 

SymTable:
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20



ExeStack:
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; Ref(Ref(int)) a ; 

SymTable:
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20



ExeStack:
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (0, Ref(int))
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20



ExeStack:
new(a, v)
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (0, Ref(int))
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20



ExeStack:
new(v, 30)
print(readHeap(readHeap(a))) ; new(a, v) ; 

SymTable:
a -> (0, Ref(int))
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20



ExeStack:
new(v, 30)
print(readHeap(readHeap(a))) ; new(a, v) ; 

SymTable:
a -> (0, Ref(int))
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20



ExeStack:
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (3, Ref(int))
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20
3 -> (2, int)



ExeStack:
new(v, 30)
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (3, Ref(int))
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20
3 -> (2, int)



ExeStack:
print(readHeap(readHeap(a))) ; new(v, 30) ; 

SymTable:
a -> (3, Ref(int))
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20
3 -> (2, int)



ExeStack:
print(readHeap(readHeap(a))) ; new(v, 30) ; 

SymTable:
a -> (3, Ref(int))
v -> (2, int)

Out:


FileTable:

Heap:
2 -> 20
3 -> (2, int)



ExeStack:
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (3, Ref(int))
v -> (4, int)

Out:


FileTable:

Heap:
2 -> 20
3 -> (2, int)
4 -> 30



ExeStack:
print(readHeap(readHeap(a))) ; 

SymTable:
a -> (3, Ref(int))
v -> (4, int)

Out:


FileTable:

Heap:
2 -> 20
3 -> (2, int)
4 -> 30



ExeStack:


SymTable:
a -> (3, Ref(int))
v -> (4, int)

Out:
20 

FileTable:

Heap:
2 -> 20
3 -> (2, int)
4 -> 30



ExeStack:


SymTable:
a -> (3, Ref(int))
v -> (4, int)

Out:
20 

FileTable:

Heap:
2 -> 20
3 -> (2, int)
4 -> 30



