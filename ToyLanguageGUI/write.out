Program id: 1

ExeStack:
Ref(int) a
new(a, 20)
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(a, 20)
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; Ref(int) a ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(a, 20)
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; Ref(int) a ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(a, 20)
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; 

SymTable:
a -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(a, 20)
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; 

SymTable:
a -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; new(a, 20) ; 

SymTable:
a -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; new(a, 20) ; 

SymTable:
a -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; 

SymTable:
a -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
}
print(readHeap(a)) ; 

SymTable:
a -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
} ; 

SymTable:
a -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; for(v=0;v<3;v=v + 1) {
fork {
print(v)
v = v * readHeap(a)
}
} ; 

SymTable:
a -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; int v
v = 0
while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; int v
v = 0
while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; v = 0
while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; int v ; 

SymTable:
a -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; v = 0
while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; int v ; 

SymTable:
a -> (1, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; v = 0
while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; v = 0
while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = 0 ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = 0 ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; fork {
print(v)
v = v * readHeap(a)
}
v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; fork {
print(v)
v = v * readHeap(a)
}
v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v * readHeap(a)
} ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v * readHeap(a)
} ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 2

ExeStack:
print(v)
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 2

ExeStack:
print(v)
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 1

Out:


FileTable:

Heap:
1 -> 20



Program id: 2

ExeStack:
v = v * readHeap(a) ; print(v) ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 1

Out:


FileTable:

Heap:
1 -> 20



Program id: 2

ExeStack:
v = v * readHeap(a) ; print(v) ; 

SymTable:
a -> (1, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; fork {
print(v)
v = v * readHeap(a)
}
v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 2

ExeStack:
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 0

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; fork {
print(v)
v = v * readHeap(a)
}
v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 2

ExeStack:
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 0

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v * readHeap(a)
} ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 2

ExeStack:


SymTable:
a -> (1, int)
v -> 0

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v * readHeap(a)
} ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 3

ExeStack:
print(v)
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 3

ExeStack:
print(v)
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 3

ExeStack:
v = v * readHeap(a) ; print(v) ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 3

ExeStack:
v = v * readHeap(a) ; print(v) ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; fork {
print(v)
v = v * readHeap(a)
}
v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 3

ExeStack:
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; fork {
print(v)
v = v * readHeap(a)
}
v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 3

ExeStack:
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 1

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v * readHeap(a)
} ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 3

ExeStack:


SymTable:
a -> (1, int)
v -> 20

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v * readHeap(a)
} ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 4

ExeStack:
print(v)
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 4

ExeStack:
print(v)
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 3

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 4

ExeStack:
v = v * readHeap(a) ; print(v) ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; while (v < 3) {
fork {
print(v)
v = v * readHeap(a)
}
v = v + 1
} ; 

SymTable:
a -> (1, int)
v -> 3

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 4

ExeStack:
v = v * readHeap(a) ; print(v) ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; 

SymTable:
a -> (1, int)
v -> 3

Out:
0 1 2 

FileTable:

Heap:
1 -> 20



Program id: 4

ExeStack:
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 2 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
print(readHeap(a)) ; 

SymTable:
a -> (1, int)
v -> 3

Out:
0 1 2 

FileTable:

Heap:
1 -> 20



Program id: 4

ExeStack:
v = v * readHeap(a) ; 

SymTable:
a -> (1, int)
v -> 2

Out:
0 1 2 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:


SymTable:
a -> (1, int)
v -> 3

Out:
0 1 2 20 

FileTable:

Heap:
1 -> 20



Program id: 4

ExeStack:


SymTable:
a -> (1, int)
v -> 40

Out:
0 1 2 20 

FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
Ref(int) v1
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
Ref(int) v1
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v1
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
Ref(int) v1
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:


SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
Ref(int) v1
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 3

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 3
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Ref(int) v1
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
Ref(int) v1
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 2

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 200
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 3

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 4

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 300



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 5

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
199 305 

FileTable:

Heap:
1 -> 199
2 -> 305



Program id: 1

ExeStack:
Ref(int) v1
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v1 ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) v2
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Ref(int) v2 ; 

SymTable:
v1 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int x ; 

SymTable:
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int q
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; int q ; 

SymTable:
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v1, 20)
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v1, 20) ; 

SymTable:
q -> 0
x -> 0
v1 -> (0, int)
v2 -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
new(v2, 30)
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; new(v2, 30) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (0, int)

Out:


FileTable:

Heap:
1 -> 20



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(x)
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(x) ; 

SymTable:
q -> 0
x -> 0
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
}
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
newLock(q)
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
}
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; newLock(q) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; fork {
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x)
} ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
}
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
lock(x)
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; fork {
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
writeHeap(v1, readHeap(v1) - 1)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
}
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) - 1) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; fork {
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q)
} ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 20
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; lock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 3

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
lock(q)
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 3

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
writeHeap(v1, readHeap(v1) * 10)
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Nop
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; writeHeap(v1, readHeap(v1) * 10) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 4

ExeStack:
writeHeap(v2, readHeap(v2) * 10)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 19
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 30



Program id: 2

ExeStack:
unlock(x) ; 

SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 30



Program id: 4

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) * 10) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 30



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 30



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 2

ExeStack:


SymTable:
q -> 0
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 1

ExeStack:
Nop
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 4

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 4

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; Nop ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 1

ExeStack:
lock(x)
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 5

ExeStack:
writeHeap(v2, readHeap(v2) + 5)
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; lock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 5

ExeStack:
unlock(q) ; writeHeap(v2, readHeap(v2) + 5) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 300



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v1))
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 5

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 5

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; print(readHeap(v1)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:


FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
unlock(x)
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; unlock(x) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
lock(q)
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; lock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
print(readHeap(v2))
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; print(readHeap(v2)) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 305 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
unlock(q) ; 

SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 305 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:


SymTable:
q -> 2
x -> 1
v1 -> (1, int)
v2 -> (2, int)

Out:
190 305 

FileTable:

Heap:
1 -> 190
2 -> 305



Program id: 1

ExeStack:
Ref(int) a
Ref(int) b
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) b
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; Ref(int) a ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) b
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; Ref(int) a ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) b
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
Ref(int) b
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; Ref(int) b ; 

SymTable:
a -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; Ref(int) b ; 

SymTable:
a -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (0, int)
b -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int v
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (0, int)
b -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; int v ; 

SymTable:
a -> (0, int)
b -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; int v ; 

SymTable:
a -> (0, int)
b -> (0, int)

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (0, int)
b -> (0, int)
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(a, 0)
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (0, int)
b -> (0, int)
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; new(a, 0) ; 

SymTable:
a -> (0, int)
b -> (0, int)
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; new(a, 0) ; 

SymTable:
a -> (0, int)
b -> (0, int)
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (0, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 0



Program id: 1

ExeStack:
new(b, 0)
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (0, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 0



Program id: 1

ExeStack:
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; new(b, 0) ; 

SymTable:
a -> (1, int)
b -> (0, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 0



Program id: 1

ExeStack:
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; new(b, 0) ; 

SymTable:
a -> (1, int)
b -> (0, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 0



Program id: 1

ExeStack:
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 0
2 -> 0



Program id: 1

ExeStack:
writeHeap(a, 1)
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 0
2 -> 0



Program id: 1

ExeStack:
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; writeHeap(a, 1) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 0
2 -> 0



Program id: 1

ExeStack:
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; writeHeap(a, 1) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 0
2 -> 0



Program id: 1

ExeStack:
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 0



Program id: 1

ExeStack:
writeHeap(b, 2)
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 0



Program id: 1

ExeStack:
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; writeHeap(b, 2) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 0



Program id: 1

ExeStack:
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; writeHeap(b, 2) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 0



Program id: 1

ExeStack:
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
v = readHeap(a) < readHeap(b) ? 100 : 200
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; v = readHeap(a) < readHeap(b) ? 100 : 200 ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; v = readHeap(a) < readHeap(b) ? 100 : 200 ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; if (readHeap(a) < readHeap(b)) then (v = 100) else (v = 200) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; if (readHeap(a) < readHeap(b)) then (v = 100) else (v = 200) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; v = 100 ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; v = 100 ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 0

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v)
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:


FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v) ; v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200 ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v) ; v = readHeap(b) - 2 + readHeap(a) > readHeap(a) ? 100 : 200 ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v) ; if (readHeap(b) - 2 + readHeap(a) > readHeap(a)) then (v = 100) else (v = 200) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v) ; if (readHeap(b) - 2 + readHeap(a) > readHeap(a)) then (v = 100) else (v = 200) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v) ; v = 200 ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v) ; v = 200 ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 100

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 200

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
print(v) ; 

SymTable:
a -> (1, int)
b -> (2, int)
v -> 200

Out:
100 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:


SymTable:
a -> (1, int)
b -> (2, int)
v -> 200

Out:
100 200 

FileTable:

Heap:
1 -> 1
2 -> 2



Program id: 1

ExeStack:
int a
int b
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int b
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; int a ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int b
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; int a ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int b
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int b
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; int b ; 

SymTable:
a -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; int b ; 

SymTable:
a -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 0
b -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int c
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 0
b -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; int c ; 

SymTable:
a -> 0
b -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; int c ; 

SymTable:
a -> 0
b -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 0
b -> 0
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
a = 1
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 0
b -> 0
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; a = 1 ; 

SymTable:
a -> 0
b -> 0
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; a = 1 ; 

SymTable:
a -> 0
b -> 0
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 1
b -> 0
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
b = 2
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 1
b -> 0
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; b = 2 ; 

SymTable:
a -> 1
b -> 0
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; b = 2 ; 

SymTable:
a -> 1
b -> 0
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 1
b -> 2
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
c = 5
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 1
b -> 2
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; c = 5 ; 

SymTable:
a -> 1
b -> 2
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; c = 5 ; 

SymTable:
a -> 1
b -> 2
c -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300))
print(300) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300)) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; switch(a * 10)
(case b * c: print(a)
print(b))
(case 10: print(100)
print(200))
(default: print(300)) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; if (a * 10 == b * c) then (print(a)
print(b)) else (if (a * 10 == 10) then (print(100)
print(200)) else (print(300))) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; if (a * 10 == b * c) then (print(a)
print(b)) else (if (a * 10 == 10) then (print(100)
print(200)) else (print(300))) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; print(a)
print(b) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; print(a)
print(b) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; print(b) ; print(a) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; print(b) ; print(a) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; print(b) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:
1 

FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; print(b) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:
1 

FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:
1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(300) ; 

SymTable:
a -> 1
b -> 2
c -> 5

Out:
1 2 

FileTable:

Heap:



Program id: 1

ExeStack:


SymTable:
a -> 1
b -> 2
c -> 5

Out:
1 2 300 

FileTable:

Heap:



Program id: 1

ExeStack:
int v
v = 0
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
v = 0
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; int v ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
v = 0
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; int v ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
v = 0
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
v = 0
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; v = 0 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; v = 0 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
}
sleep(5)
print(v * 10) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; fork {
print(v)
v = v + 1
}
v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; fork {
print(v)
v = v + 1
}
v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v + 1
} ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v + 1
} ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 2

ExeStack:
print(v)
v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 2

ExeStack:
print(v)
v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; 

SymTable:
v -> 1

Out:


FileTable:

Heap:



Program id: 2

ExeStack:
v = v + 1 ; print(v) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; 

SymTable:
v -> 1

Out:


FileTable:

Heap:



Program id: 2

ExeStack:
v = v + 1 ; print(v) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; fork {
print(v)
v = v + 1
}
v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 2

ExeStack:
v = v + 1 ; 

SymTable:
v -> 0

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; fork {
print(v)
v = v + 1
}
v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 2

ExeStack:
v = v + 1 ; 

SymTable:
v -> 0

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v + 1
} ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 2

ExeStack:


SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v + 1
} ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 3

ExeStack:
print(v)
v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 3

ExeStack:
print(v)
v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; 

SymTable:
v -> 2

Out:
0 

FileTable:

Heap:



Program id: 3

ExeStack:
v = v + 1 ; print(v) ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; 

SymTable:
v -> 2

Out:
0 

FileTable:

Heap:



Program id: 3

ExeStack:
v = v + 1 ; print(v) ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; fork {
print(v)
v = v + 1
}
v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 3

ExeStack:
v = v + 1 ; 

SymTable:
v -> 1

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; fork {
print(v)
v = v + 1
}
v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 3

ExeStack:
v = v + 1 ; 

SymTable:
v -> 1

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v + 1
} ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 3

ExeStack:


SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v + 1
} ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 4

ExeStack:
print(v)
v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 4

ExeStack:
print(v)
v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; 

SymTable:
v -> 3

Out:
0 1 

FileTable:

Heap:



Program id: 4

ExeStack:
v = v + 1 ; print(v) ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; while (v < 3) {
fork {
print(v)
v = v + 1
}
v = v + 1
} ; 

SymTable:
v -> 3

Out:
0 1 

FileTable:

Heap:



Program id: 4

ExeStack:
v = v + 1 ; print(v) ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 4

ExeStack:
v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
sleep(5)
print(v * 10) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 4

ExeStack:
v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(5) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 4

ExeStack:


SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(5) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(4) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(4) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(3) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(3) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(2) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(2) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(1) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(1) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(0) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; sleep(0) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:


SymTable:
v -> 3

Out:
0 1 2 30 

FileTable:

Heap:



Program id: 1

ExeStack:
int v
v = 0
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
v = 0
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int v ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
v = 0
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int v ; 

SymTable:

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
v = 0
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
v = 0
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; v = 0 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; v = 0 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; repeat fork {
print(v)
v = v - 1
}
v = v + 1 until v == 3 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; fork {
print(v)
v = v - 1
}
v = v + 1
while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; fork {
print(v)
v = v - 1
}
v = v + 1
while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; fork {
print(v)
v = v - 1
}
v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; fork {
print(v)
v = v - 1
}
v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v - 1
} ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v - 1
} ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 2

ExeStack:
print(v)
v = v - 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 2

ExeStack:
print(v)
v = v - 1 ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; 

SymTable:
v -> 1

Out:


FileTable:

Heap:



Program id: 2

ExeStack:
v = v - 1 ; print(v) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; 

SymTable:
v -> 1

Out:


FileTable:

Heap:



Program id: 2

ExeStack:
v = v - 1 ; print(v) ; 

SymTable:
v -> 0

Out:


FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; fork {
print(v)
v = v - 1
}
v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 2

ExeStack:
v = v - 1 ; 

SymTable:
v -> 0

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; fork {
print(v)
v = v - 1
}
v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 2

ExeStack:
v = v - 1 ; 

SymTable:
v -> 0

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v - 1
} ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 2

ExeStack:


SymTable:
v -> -1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v - 1
} ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 3

ExeStack:
print(v)
v = v - 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 3

ExeStack:
print(v)
v = v - 1 ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; 

SymTable:
v -> 2

Out:
0 

FileTable:

Heap:



Program id: 3

ExeStack:
v = v - 1 ; print(v) ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; 

SymTable:
v -> 2

Out:
0 

FileTable:

Heap:



Program id: 3

ExeStack:
v = v - 1 ; print(v) ; 

SymTable:
v -> 1

Out:
0 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; fork {
print(v)
v = v - 1
}
v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 3

ExeStack:
v = v - 1 ; 

SymTable:
v -> 1

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; fork {
print(v)
v = v - 1
}
v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 3

ExeStack:
v = v - 1 ; 

SymTable:
v -> 1

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v - 1
} ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 3

ExeStack:


SymTable:
v -> 0

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; fork {
print(v)
v = v - 1
} ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 4

ExeStack:
print(v)
v = v - 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; v = v + 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 4

ExeStack:
print(v)
v = v - 1 ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; 

SymTable:
v -> 3

Out:
0 1 

FileTable:

Heap:



Program id: 4

ExeStack:
v = v - 1 ; print(v) ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; while (!v == 3) {
fork {
print(v)
v = v - 1
}
v = v + 1
} ; 

SymTable:
v -> 3

Out:
0 1 

FileTable:

Heap:



Program id: 4

ExeStack:
v = v - 1 ; print(v) ; 

SymTable:
v -> 2

Out:
0 1 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 4

ExeStack:
v = v - 1 ; 

SymTable:
v -> 2

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int x
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 4

ExeStack:
v = v - 1 ; 

SymTable:
v -> 2

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int x ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 4

ExeStack:


SymTable:
v -> 1

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int x ; 

SymTable:
v -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
x -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int y
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
x -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int y ; 

SymTable:
v -> 3
x -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int y ; 

SymTable:
v -> 3
x -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
x -> 0
y -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int z
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
x -> 0
y -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int z ; 

SymTable:
v -> 3
x -> 0
y -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int z ; 

SymTable:
v -> 3
x -> 0
y -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
x -> 0
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
int w
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
x -> 0
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int w ; 

SymTable:
v -> 3
x -> 0
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; int w ; 

SymTable:
v -> 3
x -> 0
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
w -> 0
x -> 0
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
x = 1
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
w -> 0
x -> 0
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
y = 2
z = 3
w = 4
print(v * 10) ; x = 1 ; 

SymTable:
v -> 3
w -> 0
x -> 0
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
y = 2
z = 3
w = 4
print(v * 10) ; x = 1 ; 

SymTable:
v -> 3
w -> 0
x -> 0
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
y = 2
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
z = 3
w = 4
print(v * 10) ; y = 2 ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
z = 3
w = 4
print(v * 10) ; y = 2 ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 0
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 2
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
z = 3
w = 4
print(v * 10) ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 2
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
w = 4
print(v * 10) ; z = 3 ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 2
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
w = 4
print(v * 10) ; z = 3 ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 2
z -> 0

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
w = 4
print(v * 10) ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 2
z -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
w = 4
print(v * 10) ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 2
z -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; w = 4 ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 2
z -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; w = 4 ; 

SymTable:
v -> 3
w -> 0
x -> 1
y -> 2
z -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; 

SymTable:
v -> 3
w -> 4
x -> 1
y -> 2
z -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:
print(v * 10) ; 

SymTable:
v -> 3
w -> 4
x -> 1
y -> 2
z -> 3

Out:
0 1 2 

FileTable:

Heap:



Program id: 1

ExeStack:


SymTable:
v -> 3
w -> 4
x -> 1
y -> 2
z -> 3

Out:
0 1 2 30 

FileTable:

Heap:



